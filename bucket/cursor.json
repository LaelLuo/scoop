{
    "version": "1.7.54",
    "description": "Built to make you extraordinarily productive, Cursor is the best way to code with AI.",
    "homepage": "https://www.cursor.com/",
    "license": {
        "identifier": "Proprietary",
        "url": "https://www.cursor.com/terms-of-service"
    },
    "architecture": {
        "64bit": {
            "url": "https://downloads.cursor.com/production/5c17eb2968a37f66bc6662f48d6356a100b67be8/win32/x64/user-setup/CursorUserSetup-x64-1.7.54.exe",
            "hash": "ca6d0fc6d89ba396a1ee96ee43f9b1fe7fc754885cba5c6432354dc34fbde660"
        }
    },
    "innosetup": true,
    "extract_dir": "{code_GetDestDir}",
    "shortcuts": [
        [
            "Cursor.exe",
            "Cursor"
        ]
    ],
    "post_install": [
        "$persistDir = $persist_dir",
        "function Ensure-PortableDirectory { param([string]$Path) if (-not (Test-Path $Path)) { New-Item -ItemType Directory -Path $Path -Force | Out-Null } }",
        "function New-PortableSymlink { param([string]$Link,[string]$Target) if (Test-Path $Link) { Remove-Item $Link -Force -Recurse -ErrorAction SilentlyContinue } New-Item -ItemType SymbolicLink -Path $Link -Target $Target -Force | Out-Null }",
        "$homeConfig = Join-Path $persistDir 'home\\config'",
        "$extensionsDir = Join-Path $homeConfig 'extensions'",
        "$roamingDir = Join-Path $persistDir 'roaming'",
        "$programsDir = Join-Path $persistDir 'programs'",
        "Ensure-PortableDirectory $homeConfig",
        "Ensure-PortableDirectory $extensionsDir",
        "Ensure-PortableDirectory $roamingDir",
        "Ensure-PortableDirectory $programsDir",
        "$legacyData = Join-Path $dir 'data'",
        "if (Test-Path $legacyData) {",
        "  $legacyRoaming = Join-Path $legacyData 'user-data'",
        "  if (Test-Path $legacyRoaming) { Copy-Item \"$legacyRoaming\\*\" $roamingDir -Force -Recurse -ErrorAction SilentlyContinue }",
        "  $legacyPrograms = Join-Path $legacyData 'local-programs'",
        "  if (Test-Path $legacyPrograms) { Copy-Item \"$legacyPrograms\\*\" $programsDir -Force -Recurse -ErrorAction SilentlyContinue }",
        "  foreach ($entry in Get-ChildItem $legacyData -Force) {",
        "    if ($entry.Name -in @('user-data','local-programs')) { continue }",
        "    Copy-Item $entry.FullName $homeConfig -Force -Recurse -ErrorAction SilentlyContinue",
        "  }",
        "  Remove-Item $legacyData -Recurse -Force -ErrorAction SilentlyContinue",
        "}",
        "$userProfilePath = Join-Path $env:USERPROFILE '.cursor'",
        "if (Test-Path $userProfilePath) {",
        "  if (-not (Get-Item $userProfilePath).LinkType) { Copy-Item \"$userProfilePath\\*\" $homeConfig -Force -Recurse -ErrorAction SilentlyContinue }",
        "  Remove-Item $userProfilePath -Recurse -Force -ErrorAction SilentlyContinue",
        "}",
        "New-PortableSymlink $userProfilePath $homeConfig",
        "$appDataPath = Join-Path $env:AppData 'Cursor'",
        "if (Test-Path $appDataPath) {",
        "  if (-not (Get-Item $appDataPath).LinkType) { Copy-Item \"$appDataPath\\*\" $roamingDir -Force -Recurse -ErrorAction SilentlyContinue }",
        "  Remove-Item $appDataPath -Recurse -Force -ErrorAction SilentlyContinue",
        "}",
        "New-PortableSymlink $appDataPath $roamingDir",
        "$localProgramsPath = Join-Path $env:LocalAppData 'Programs\\cursor'",
        "if (Test-Path $localProgramsPath) {",
        "  if (-not (Get-Item $localProgramsPath).LinkType) { Copy-Item \"$localProgramsPath\\*\" $programsDir -Force -Recurse -ErrorAction SilentlyContinue }",
        "  Remove-Item $localProgramsPath -Recurse -Force -ErrorAction SilentlyContinue",
        "}",
        "New-PortableSymlink $localProgramsPath $programsDir",
        "$extensionsFile = Join-Path $extensionsDir 'extensions.json'",
        "if (Test-Path $extensionsFile) {",
        "  info 'Adjusting path in extensions file...'",
        "  (Get-Content $extensionsFile) -replace '(?<=cursor(/|\\\\\\\\)).*?(?=(/|\\\\\\\\)extensions)', $version | Set-Content $extensionsFile",
        "}"
    ],
    "pre_uninstall": [
        "$appDataPath = Join-Path $env:AppData 'Cursor'",
        "if (Test-Path $appDataPath) {",
        "  Remove-Item $appDataPath -Force",
        "  info '[Portable Mode] Removed symbolic link: %APPDATA%\\Cursor'",
        "}",
        "$userProfilePath = Join-Path $env:USERPROFILE '.cursor'",
        "if (Test-Path $userProfilePath) {",
        "  Remove-Item $userProfilePath -Force",
        "  info '[Portable Mode] Removed symbolic link: ~/.cursor'",
        "}",
        "$localProgramsPath = Join-Path $env:LocalAppData 'Programs\\cursor'",
        "if (Test-Path $localProgramsPath) {",
        "  Remove-Item $localProgramsPath -Force",
        "  info '[Portable Mode] Removed symbolic link: %LOCALAPPDATA%\\Programs\\cursor'",
        "}"
    ],
    "persist": "data",
    "checkver": {
        "url": "https://api2.cursor.sh/updates/api/update/win32-x64-archive/cursor/0.0.0/stable",
        "jsonpath": "$.url",
        "regex": "(?<url>.*CursorUserSetup-x64-(?<version>[\\d.]+)\\.exe)",
        "replace": "${version}"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": "$matchUrl"
            }
        }
    }
}
