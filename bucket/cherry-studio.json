{
    "version": "1.6.1",
    "description": "A desktop client that supports for multiple LLM providers.",
    "homepage": "https://cherry-ai.com",
    "license": "Apache-2.0",
    "architecture": {
        "64bit": {
            "url": "https://github.com/CherryHQ/cherry-studio/releases/download/v1.6.1/Cherry-Studio-1.6.1-x64-setup.exe#/dl.7z",
            "hash": "sha512:3029fa1cc92d650f49fe1f5df22de4dee2419898e72879ad8bf38dfe731435d5dae3f7dd71d7c771dec4b179fef45cdc3cc803d2f3fffcbdf75dbbffd9266c70",
            "pre_install": "Expand-7zipArchive \"$dir\\`$PLUGINSDIR\\app-64.7z\" \"$dir\""
        },
        "arm64": {
            "url": "https://github.com/CherryHQ/cherry-studio/releases/download/v1.6.1/Cherry-Studio-1.6.1-arm64-setup.exe#/dl.7z",
            "hash": "5e1d6fde96655c9a5d3d542befb85b31845657f8be37e82daad62bb679fc92fc",
            "pre_install": "Expand-7zipArchive \"$dir\\`$PLUGINSDIR\\app-arm64.7z\" \"$dir\""
        }
    },
    "shortcuts": [
        [
            "Cherry Studio.exe",
            "Cherry Studio"
        ]
    ],
    "post_install": [
        "# Clean installer leftovers (from 7zip extraction)",
        "Remove-Item \"$dir\\`$*\", \"$dir\\Uninstall*\" -Recurse",
        "",
        "# Portable mode: create data directories",
        "New-Item -ItemType Directory -Path \"$dir\\data\" -Force | Out-Null",
        "New-Item -ItemType Directory -Path \"$dir\\data\\user-data\" -Force | Out-Null",
        "New-Item -ItemType Directory -Path \"$dir\\data\\dot-cherrystudio\" -Force | Out-Null",
        "",
        "# Copy existing user data on first run",
        "if ((Test-Path \"$env:AppData\\CherryStudio\") -and !(Test-Path \"$dir\\data\\user-data\\*\")) {",
        "  info '[Portable Mode] Copying existing user data...'",
        "  Copy-Item \"$env:AppData\\CherryStudio\\*\" \"$dir\\data\\user-data\" -Recurse -Force",
        "}",
        "# Copy existing ~/.cherrystudio on first run",
        "if ((Test-Path \"$env:USERPROFILE\\.cherrystudio\") -and !(Test-Path \"$dir\\data\\dot-cherrystudio\\*\")) {",
        "  info '[Portable Mode] Copying existing ~/.cherrystudio ...'",
        "  Copy-Item \"$env:USERPROFILE\\.cherrystudio\\*\" \"$dir\\data\\dot-cherrystudio\" -Recurse -Force",
        "}",
        "",
        "# Create junction to redirect APPDATA",
        "$appDataPath = \"$env:AppData\\CherryStudio\"",
        "if (Test-Path $appDataPath) { Remove-Item $appDataPath -Force }",
        "try {",
        "  New-Item -ItemType Junction -Path $appDataPath -Target \"$dir\\data\\user-data\" -Force | Out-Null",
        "  info '[Portable Mode] Created junction: %APPDATA%\\CherryStudio -> scoop\\data\\user-data'",
        "} catch {",
        "  warn '[Portable Mode] Failed to create junction for user data: $_'",
        "}",
        "",
        "# Create junction to redirect ~/.cherrystudio",
        "$homeDotPath = Join-Path $env:USERPROFILE '.cherrystudio'",
        "if (Test-Path $homeDotPath) { Remove-Item $homeDotPath -Force }",
        "try {",
        "  New-Item -ItemType Junction -Path $homeDotPath -Target \"$dir\\data\\dot-cherrystudio\" -Force | Out-Null",
        "  info '[Portable Mode] Created junction: ~/.cherrystudio -> scoop\\data\\dot-cherrystudio'",
        "} catch {",
        "  warn '[Portable Mode] Failed to create junction for ~/.cherrystudio: $_'",
        "}",
        "",
        "# Link system bun/uv into Cherry Studio local bin if available",
        "$csBin = Join-Path $env:USERPROFILE '.cherrystudio\\bin'",
        "New-Item -ItemType Directory -Path $csBin -Force | Out-Null",
        "",
        "# bun (do not overwrite existing)",
        "$bunCmd = Get-Command bun -ErrorAction SilentlyContinue",
        "if ($bunCmd) {",
        "  $bunTarget = $bunCmd.Source",
        "  $bunExe = Join-Path $csBin 'bun.exe'",
        "  $bunShim = Join-Path $csBin 'bun.cmd'",
        "  if ((Test-Path $bunExe) -or (Test-Path $bunShim)) {",
        "    info '[Cherry Studio] bun already present in ~/.cherrystudio/bin; skipping'",
        "  } else {",
        "    try {",
        "      New-Item -ItemType SymbolicLink -Path $bunExe -Target $bunTarget -Force | Out-Null",
        "      info \"[Cherry Studio] Linked bun -> $bunTarget\"",
        "    } catch {",
        "      warn \"[Cherry Studio] Symlink bun failed, creating shim: $_\"",
        "      $shimContent = '@echo off' + 
 + '\"' + $bunTarget + '\" %*'",
        "      Set-Content -Path $bunShim -Value $shimContent -Encoding Ascii",
        "    }",
        "  }",
        "} else {",
        "  info '[Cherry Studio] bun not found in PATH; skipping link'",
        "}",
        "",
        "# uv + uvx (do not overwrite existing)",
        "$uvNames = @('uv', 'uvx', 'uvw')",
        "foreach ($name in $uvNames) {",
        "  $cmdInfo = Get-Command $name -ErrorAction SilentlyContinue",
        "  if ($cmdInfo) {",
        "    $target = $cmdInfo.Source",
        "    $exePath = Join-Path $csBin (\"$name.exe\")",
        "    $cmdPath = Join-Path $csBin (\"$name.cmd\")",
        "    if ((Test-Path $exePath) -or (Test-Path $cmdPath)) {",
        "      info \"[Cherry Studio] $name already present in ~/.cherrystudio/bin; skipping\"",
        "      continue",
        "    }",
        "    try {",
        "      New-Item -ItemType SymbolicLink -Path $exePath -Target $target -Force | Out-Null",
        "      info \"[Cherry Studio] Linked $name -> $target\"",
        "    } catch {",
        "      warn \"[Cherry Studio] Symlink $name failed, creating shim: $_\"",
        "      $shimContent = '@echo off' + 
 + '\"' + $target + '\" %*'",
        "      Set-Content -Path $cmdPath -Value $shimContent -Encoding Ascii",
        "    }",
        "  } else {",
        "    info \"[Cherry Studio] $name not found in PATH; skipping link\"",
        "  }",
        "}"
    ],
    "pre_uninstall": [
        "# Clean up junction point",
        "$appDataPath = \"$env:AppData\\CherryStudio\"",
        "if (Test-Path $appDataPath) {",
        "  Remove-Item $appDataPath -Force",
        "  info '[Portable Mode] Removed junction: %APPDATA%\\CherryStudio'",
        "}",
        "# Clean up ~/.cherrystudio junction",
        "$homeDotPath = Join-Path $env:USERPROFILE '.cherrystudio'",
        "if (Test-Path $homeDotPath) {",
        "  Remove-Item $homeDotPath -Force",
        "  info '[Portable Mode] Removed junction: ~/.cherrystudio'",
        "}"
    ],
    "persist": "data",
    "checkver": {
        "github": "https://github.com/CherryHQ/cherry-studio"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": "https://github.com/CherryHQ/cherry-studio/releases/download/v$version/Cherry-Studio-$version-x64-setup.exe#/dl.7z",
                "hash": {
                    "url": "$baseurl/latest.yml",
                    "regex": "sha512: $base64"
                }
            },
            "arm64": {
                "url": "https://github.com/CherryHQ/cherry-studio/releases/download/v$version/Cherry-Studio-$version-arm64-setup.exe#/dl.7z"
            }
        }
    }
}
