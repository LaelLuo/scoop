{
    "version": "4.15.3",
    "description": "Collaborative note taking",
    "homepage": "https://www.notion.so/",
    "license": {
        "identifier": "Proprietary",
        "url": "https://www.notion.so/Terms-and-Privacy-28ffdd083dc3473e9c2da6ec011b58ac"
    },
    "architecture": {
        "64bit": {
            "url": "https://desktop-release.notion-static.com/Notion%20Setup%204.15.3.exe#/dl.7z",
            "hash": "sha512:f0f34ee565baa2ae0a80eaa2d1e0d147be3e06fd8e6a4a5038c5b81d3fd476696b1a1c3564f81b1757bde9f5ce7e0ec066b485c3327646056e8e91754746cbf3",
            "pre_install": [
                "Expand-7zipArchive \"$dir\\`$PLUGINSDIR\\app-64.7z\" \"$dir\"",
                "Remove-Item \"$dir\\`$*\" -Recurse"
            ]
        }
    },
    "shortcuts": [
        [
            "Notion.exe",
            "Notion"
        ]
    ],
    "post_install": [
        "# Create data directories",
        "New-Item -ItemType Directory -Path \"$dir\\data\" -Force | Out-Null",
        "New-Item -ItemType Directory -Path \"$dir\\data\\user-data\" -Force | Out-Null",
        "New-Item -ItemType Directory -Path \"$dir\\data\\local-programs\" -Force | Out-Null",
        "",
        "# Copy existing data if present",
        "if ((Test-Path \"$env:AppData\\Notion\") -and !(Test-Path \"$dir\\data\\user-data\\*\")) {",
        "  info '[Portable Mode] Copying existing user data...'",
        "  Copy-Item \"$env:AppData\\Notion\\*\" \"$dir\\data\\user-data\" -Recurse -Force",
        "}",
        "if ((Test-Path \"$env:LocalAppData\\Programs\\notion\") -and !(Test-Path \"$dir\\data\\local-programs\\*\")) {",
        "  info '[Portable Mode] Copying existing local programs...'",
        "  Copy-Item \"$env:LocalAppData\\Programs\\notion\\*\" \"$dir\\data\\local-programs\" -Recurse -Force",
        "}",
        "",
        "# Define paths for junction points",
        "$appDataPath = \"$env:AppData\\Notion\"",
        "$localProgramsPath = \"$env:LocalAppData\\Programs\\notion\"",
        "",
        "# Remove existing directories/links if they exist",
        "if (Test-Path $appDataPath) {",
        "  Remove-Item $appDataPath -Force",
        "}",
        "if (Test-Path $localProgramsPath) {",
        "  Remove-Item $localProgramsPath -Force",
        "}",
        "",
        "# Create junction points",
        "try {",
        "  New-Item -ItemType Junction -Path $appDataPath -Target \"$dir\\data\\user-data\" -Force | Out-Null",
        "  info '[Portable Mode] Created junction: %APPDATA%\\Notion -> scoop\\data\\user-data'",
        "} catch {",
        "  warn 'Failed to create junction for user data: $_'",
        "}",
        "",
        "try {",
        "  New-Item -ItemType Junction -Path $localProgramsPath -Target \"$dir\\data\\local-programs\" -Force | Out-Null",
        "  info '[Portable Mode] Created junction: %LOCALAPPDATA%\\Programs\\notion -> scoop\\data\\local-programs'",
        "} catch {",
        "  warn 'Failed to create junction for local programs: $_'",
        "}",
        ""
    ],
    "pre_uninstall": [
        "# Clean up junction points",
        "$appDataPath = \"$env:AppData\\Notion\"",
        "$localProgramsPath = \"$env:LocalAppData\\Programs\\notion\"",
        "",
        "if (Test-Path $appDataPath) {",
        "  Remove-Item $appDataPath -Force",
        "  info '[Portable Mode] Removed junction: %APPDATA%\\Notion'",
        "}",
        "",
        "if (Test-Path $localProgramsPath) {",
        "  Remove-Item $localProgramsPath -Force",
        "  info '[Portable Mode] Removed junction: %LOCALAPPDATA%\\Programs\\notion'",
        "}",
        ""
    ],
    "persist": "data",
    "checkver": {
        "url": "https://desktop-release.notion-static.com/latest.yml",
        "regex": "version:\\s+([\\d.]+)"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": "https://desktop-release.notion-static.com/Notion%20Setup%20$version.exe#/dl.7z"
            }
        },
        "hash": {
            "url": "$baseurl/latest.yml",
            "regex": "sha512:\\s+$base64"
        }
    }
}
