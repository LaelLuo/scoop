{
    "version": "4.21.1",
    "description": "Collaborative note taking",
    "homepage": "https://www.notion.so/",
    "license": {
        "identifier": "Proprietary",
        "url": "https://www.notion.so/Terms-and-Privacy-28ffdd083dc3473e9c2da6ec011b58ac"
    },
    "architecture": {
        "64bit": {
            "url": "https://desktop-release.notion-static.com/Notion%20Setup%204.21.1.exe#/dl.7z",
            "hash": "sha512:85e92750248f1fb7138a481e650def0b7fba39762f0f976957012613ef4191b7b029721318efebafc51684d0d6b94bb7ec1c9b769a0d9f7f72de2a63a9e8d906",
            "pre_install": [
                "Expand-7zipArchive \"$dir\\`$PLUGINSDIR\\app-64.7z\" \"$dir\"",
                "Remove-Item \"$dir\\`$*\" -Recurse"
            ]
        }
    },
    "shortcuts": [
        [
            "Notion.exe",
            "Notion"
        ]
    ],
    "post_install": [
        "$persistDir = $persist_dir",
        "function Ensure-PortableDirectory { param([string]$Path) if (-not (Test-Path $Path)) { New-Item -ItemType Directory -Path $Path -Force | Out-Null } }",
        "function New-PortableSymlink { param([string]$Link,[string]$Target) if (Test-Path $Link) { Remove-Item $Link -Force -Recurse -ErrorAction SilentlyContinue } New-Item -ItemType SymbolicLink -Path $Link -Target $Target -Force | Out-Null }",
        "$roamingDir = Join-Path $persistDir 'roaming'",
        "$programsDir = Join-Path $persistDir 'programs'",
        "$localDir = Join-Path $persistDir 'local'",
        "Ensure-PortableDirectory $roamingDir",
        "Ensure-PortableDirectory $programsDir",
        "Ensure-PortableDirectory $localDir",
        "$updaterBlocker = Join-Path $localDir 'notion-updater'",
        "$legacyData = Join-Path $dir 'data'",
        "if (Test-Path $legacyData) {",
        "  $legacyRoaming = Join-Path $legacyData 'user-data'",
        "  if (Test-Path $legacyRoaming) { Copy-Item \"$legacyRoaming\\*\" $roamingDir -Force -Recurse -ErrorAction SilentlyContinue }",
        "  $legacyPrograms = Join-Path $legacyData 'local-programs'",
        "  if (Test-Path $legacyPrograms) { Copy-Item \"$legacyPrograms\\*\" $programsDir -Force -Recurse -ErrorAction SilentlyContinue }",
        "  Remove-Item $legacyData -Recurse -Force -ErrorAction SilentlyContinue",
        "}",
        "$appDataPath = Join-Path $env:AppData 'Notion'",
        "if (Test-Path $appDataPath) {",
        "  if (-not (Get-Item $appDataPath).LinkType) { Copy-Item \"$appDataPath\\*\" $roamingDir -Force -Recurse -ErrorAction SilentlyContinue }",
        "  Remove-Item $appDataPath -Recurse -Force -ErrorAction SilentlyContinue",
        "}",
        "New-PortableSymlink $appDataPath $roamingDir",
        "$localProgramsPath = Join-Path $env:LocalAppData 'Programs\\notion'",
        "if (Test-Path $localProgramsPath) {",
        "  if (-not (Get-Item $localProgramsPath).LinkType) { Copy-Item \"$localProgramsPath\\*\" $programsDir -Force -Recurse -ErrorAction SilentlyContinue }",
        "  Remove-Item $localProgramsPath -Recurse -Force -ErrorAction SilentlyContinue",
        "}",
        "New-PortableSymlink $localProgramsPath $programsDir",
        "$updaterPath = Join-Path $env:LocalAppData 'notion-updater'",
        "if (Test-Path $updaterPath) {",
        "  Remove-Item $updaterPath -Recurse -Force -ErrorAction SilentlyContinue",
        "}",
        "if (-not (Test-Path $updaterBlocker)) {",
        "  New-Item -ItemType File -Path $updaterBlocker -Force | Out-Null",
        "}",
        "try {",
        "  New-PortableSymlink $updaterPath $updaterBlocker",
        "  info '[Portable Mode] Created blocker link: %LOCALAPPDATA%\\notion-updater -> persist\\\\notion\\\\local\\\\notion-updater'",
        "} catch {",
        "  warn 'Failed to create notion-updater blocker link: $_'",
        "}"
    ],
    "pre_uninstall": [
        "# Clean up symbolic links",
        "$appDataPath = \"$env:AppData\\Notion\"",
        "$localProgramsPath = \"$env:LocalAppData\\Programs\\notion\"",
        "$updaterPath = \"$env:LocalAppData\\notion-updater\"",
        "",
        "if (Test-Path $appDataPath) {",
        "  Remove-Item $appDataPath -Force",
        "  info '[Portable Mode] Removed symbolic link: %APPDATA%\\Notion'",
        "}",
        "",
        "if (Test-Path $localProgramsPath) {",
        "  Remove-Item $localProgramsPath -Force",
        "  info '[Portable Mode] Removed symbolic link: %LOCALAPPDATA%\\Programs\\notion'",
        "}",
        "",
        "if (Test-Path $updaterPath) {",
        "  Remove-Item $updaterPath -Force",
        "  info '[Portable Mode] Removed blocker link: %LOCALAPPDATA%\\notion-updater'",
        "}",
        ""
    ],
    "persist": "data",
    "checkver": {
        "url": "https://desktop-release.notion-static.com/latest.yml",
        "regex": "version:\\s+([\\d.]+)"
    },
    "autoupdate": {
        "architecture": {
            "64bit": {
                "url": "https://desktop-release.notion-static.com/Notion%20Setup%20$version.exe#/dl.7z"
            }
        },
        "hash": {
            "url": "$baseurl/latest.yml",
            "regex": "sha512:\\s+$base64"
        }
    }
}
